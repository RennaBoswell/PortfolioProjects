-- To check if data is correctly imported

Select *
From `iconic-works-359616.CovidData.Covid Vaccinations`
Order by 3,4

SELECT *
FROM `iconic-works-359616.CovidData.covid deaths`
WHERE continent is not null
ORDER BY 3,4

-- starting data

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `iconic-works-359616.CovidData.covid deaths`
ORDER BY 1,2 

-- Total cases vs Total deaths

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as PercentPopulationInfected
FROM `iconic-works-359616.CovidData.covid deaths`
WHERE location like '%States%'
ORDER BY 1,2 


-- Total cases vs Population

SELECT location, date, population, total_cases, (total_cases/population)*100 as PercentPopulationInfected
FROM `iconic-works-359616.CovidData.covid deaths`
WHERE location like '%States%'
ORDER BY 1,2 

-- Looking at countries with highest infection rate compared to population


SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM `iconic-works-359616.CovidData.covid deaths`
-- WHERE location like '%States%'
GROUP BY location, population
ORDER BY PercentPopulationInfected desc


-- Showing countries with highest death count per population

SELECT location, MAX(total_deaths) as TotalDeathCount
FROM `iconic-works-359616.CovidData.covid deaths`
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount desc

-- By continent highest death count per population

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM `iconic-works-359616.CovidData.covid deaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount desc


-- continent with highest infection rate

SELECT continent, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM `iconic-works-359616.CovidData.covid deaths`
-- WHERE location like '%States%'
WHERE continent is not null
GROUP BY continent, population
ORDER BY PercentPopulationInfected desc

-- highest death count by population continents

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM `iconic-works-359616.CovidData.covid deaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount desc

-- Global Numbers

SELECT date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths , SUM(new_deaths)/SUM(new_cases)*100 as deathpercentage
FROM `iconic-works-359616.CovidData.covid deaths`
--WHERE location like '%States%'
WHERE continent is not null
GROUP BY date
ORDER BY 1,2 

-- total cases/total deaths/ death percentage/ no date

SELECT SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths , SUM(new_deaths)/SUM(new_cases)*100 as deathpercentage
FROM `iconic-works-359616.CovidData.covid deaths`
--WHERE location like '%States%'
WHERE continent is not null
--GROUP BY date
ORDER BY 1,2 



-- looking at total population vs vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (partition by dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
 -- (RollingPeopleVaccinated/population)*100
FROM `iconic-works-359616.CovidData.covid deaths`  dea
JOIN `iconic-works-359616.CovidData.Covid Vaccinations` vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3 


-- Using CTE to perform Calculation on Partition By in previous query

WITH PopvsVac AS (
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.Date) AS RollingPeopleVaccinated
FROM `iconic-works-359616.CovidData.covid deaths`  dea
JOIN `iconic-works-359616.CovidData.Covid Vaccinations` vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null 
)

SELECT *, (RollingPeopleVaccinated/Population)*100 
FROM PopvsVac
ORDER BY Location,Date



-- Creating view to store data

Create View `iconic-works-359616.CovidData.PercentPopulationVaccinated` as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From `iconic-works-359616.CovidData.covid deaths`  dea
JOIN `iconic-works-359616.CovidData.Covid Vaccinations` vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 






